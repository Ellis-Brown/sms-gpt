import React, { useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const [phoneNumber, setPhoneNumber] = useState("");

  function sendText() {
    console.log("Sending text...");
    fetch("/api/send_msg", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        to: phoneNumber,
        body: "Hello from Twilio website!",
      }),
    }).then(response => { return response.json() })
      .then(data => console.log(data))
      .catch(err => console.log(err));
  }

  const handleTextSubmit = (event: { preventDefault: () => void; }) => {
    event.preventDefault();
    sendText();
  }

  const handleChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {
    setPhoneNumber(event.target.value);
  }

  return (
    <>
      <Head>
        <title>SMS with Chat-gpt3.5-turbo</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <form onSubmit={handleTextSubmit}>
          <label htmlFor="phoneNumber">Phone Number:</label>
          <input
            type="text"
            id="phoneNumber"
            name="phoneNumber"
            value={phoneNumber}
            onChange={handleChange}
          />
          <button type="submit">Send Text</button>
        </form>
        <AuthShowcase />
      </div>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in / Sign up"}
      </button>
    </div>
  );
};
